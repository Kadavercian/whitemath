<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp">
  <head>
    <link rel="SHORTCUT ICON" href="./../icons/favicon.ico" />
    <style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style>
    <link rel="stylesheet" type="text/css" href="./../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" />
    <style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style>
    <script src="./../scripts/branding.js" type="text/javascript">
      <!---->
    </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>Matrix(T, C) Methods</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="Matrix%3CT%2C C%3E class, methods" />
    <meta name="System.Keywords" content="Matrix(Of T%2C C) class, methods" />
    <meta name="Microsoft.Help.Id" content="Methods.T:whiteMath.Matrices.Matrix`2" />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="'true'" />
    <meta name="container" content="whiteMath.Matrices" />
    <meta name="file" content="8d1d2271-2969-d0a9-1597-71f55d2b7f0c" />
    <meta name="guid" content="8d1d2271-2969-d0a9-1597-71f55d2b7f0c" />
    
    <link type="text/css" rel="stylesheet" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <meta name="SelfBranded" content="true" />
  </head>
  <body onload="onLoad()" class="primary-mtps-offline-document">
    <div class="OH_outerDiv">
      <div class="OH_outerContent">
        <table class="TitleTable">
          <tr>
            <td class="OH_tdTitleColumn">Matrix<span id="ID0EFBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EFBABAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="typeparameter">T</span>, <span class="typeparameter">C</span><span id="ID0EBBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBABAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script> Methods</td>
            <td class="OH_tdRunningTitleColumn">whiteMath + whiteStructs - a programmer-friendly mathematical library</td>
          </tr>
        </table>
        <div id="mainSection">
          <div id="mainBody">
            <span class="introStyle"></span>The <a href="5a023282-18c6-741e-f496-629fca434b01.htm" target="">Matrix<span id="ID0ECGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECGAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T, C<span id="ID0EAGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAGAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script></a> type exposes the following members.<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Methods</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="memberList" class="members"><tr><th class="ps_iconColumn">
							 
						</th><th class="ps_nameColumn">Name</th><th class="ps_descriptionColumn">Description</th></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="cc22d330-4dbf-e69c-3118-1ab2bf69bde2.htm" target="">addValue</a></td><td><div class="summary">
            Adds a double value to all of the matrix elements.
            </div></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="2846e169-041d-9c41-ff84-42757cbf0406.htm" target="">checkBounds</a></td><td><div class="summary">
            Checks if the arguments do not exceed the number of total rows and columns respectively.
            Throws MatrixSizeException otherwise.
            </div></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="9f0deb59-4e53-3381-21f9-aa5da65a6a09.htm" target="">checkPositive</a></td><td><div class="summary">
            Checks if the arguments are zero or positive.
            </div></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="ad83cbcc-325b-8a00-9c40-f59a75400192.htm" target="">checkSquare</a></td><td><div class="summary">
            Checks if the matrix is square.
            Throws MatrixSizeException if this requirement is not met. 
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="e8ba5c34-2137-ee9d-1546-c603fd83a6f8.htm" target="">Clone</a></td><td><div class="summary">
            Creates a deep copy of current object.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="1471ec26-9ddf-f68e-1dd9-3b9a6187fe6a.htm" target="">convertFromArray</a></td><td><div class="summary">
             Fills the current matrix with the elements of matching type stored in a 2D array.
             The array size and the current matrix' size should match.
            
             Does not use the element copying, so when <span class="typeparameter">T</span> is a reference type,
             all changes made to the array OBJECTS (not to the array itself) will affect the matrix 
             elements and vice versa.
             
             Use <span class="nolink">[!:MatrixElementCopyAdapter]</span> if such behaviour is not expected.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="e3e47e37-c00c-1f88-e5c8-206bfc94350d.htm" target="">convertToArray</a></td><td><div class="summary">
            Converts the current matrix to a two-dimensional array.
            
            Does not use the element copying, so when <span class="typeparameter">T</span> is a reference type,
            all changes made to the array OBJECTS (not to the array itself) will affect the matrix 
            elements and vice versa.
            
            Use <span class="nolink">[!:MatrixElementCopyAdapter]</span> if such behaviour is not expected.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="03d7fe35-8a28-6a5e-4d28-5a253e3c6408.htm" target="">Determinant_LUP_Factorization</a></td><td><div class="summary">
            Performs the matrix determinant calculation using the LUP-factorization
            of the matrix.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="c784f808-7bc5-bed7-211d-998d48df7981.htm" target="">Determinant_Permutations</a></td><td><div class="summary">
            Counts the matrix determinant using the definition of matrix determinant.
            Creates all of the row index permutations: thus (WARNING!)
            the complexity of algorithm is O(n!) operations for square matrices of size 'n'.
            
            Please do not use for matrices bigger than 7-10.
            </div></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="8ef26e6a-3ebc-de6f-1e98-f66064e99ecc.htm" target="">divideByValue</a></td><td><div class="summary">
            Divides all of the matrix elements by a double value.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="4ef3c4ab-9172-29ab-8869-ab3f72a96207.htm" target="">Equals</a></td><td><div class="summary">
            Checks whether all of the elements in the current matrix
            are equal to the respective elements in the other matrix.
            
            The other matrix may be either the IMatrix object containing
            <span class="typeparameter">T</span> elements or Numeric IMatrix object. (e.g. Matrix(T,C)).
            </div> (Overrides <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/bsc2ak47" target="_blank">Object<span id="ID0EBBA5BEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBA5BEAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Equals(Object)</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/4k87zsw7" target="_blank">Finalize</a></td><td><div class="summary">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</div> (Inherited from <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="94233cff-373d-3f7b-4c7c-b379c44ad508.htm" target="">getCopyAdapter</a></td><td></td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/zdee4b3y" target="_blank">GetHashCode</a></td><td><div class="summary">Serves as a hash function for a particular type. </div> (Inherited from <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="b8395349-4b97-445f-4020-b91184555505.htm" target="">getItemAt</a></td><td><div class="summary">
            Returns the value at specified matrix index.
            
            Contract: 
            
            1. should NOT perform any speed-lowering index-bound checking, because all checking has
            been already performed at DoubleMatrix level in this[,] indexer.
            
            2. should NOT perform any element copying for class types.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="2376bd4f-dd68-8df4-db84-460f7300bd81.htm" target="">getMinorMatrix</a></td><td><div class="summary">
            Returns the dependent minor matrix which is made by hiding
            the row with index <span class="parameter">rowToRemove</span> and the column with
            index <span class="parameter">columnToRemove</span>.
            
            Any changes made to this minor matrix will be reflected on the current matrix.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="16e3014e-0d27-7903-d530-4a32332bcaaa.htm" target="">getMinorMatrixCopy</a></td><td><div class="summary">
            Returns the minor matrix copy (independent from the current),
            which is made by removing the row with index <span class="parameter">rowToRemove</span>
            and the column with index <span class="parameter">columnToRemove</span>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="477696ec-236e-1b0b-a21c-4fe918095493.htm" target="">getSubMatrixAt(Int32, Int32)</a></td><td><div class="summary">
            Overloaded. Gets the binded submatrix for the current matrix.
            Changes to the submatrix WILL affect the current.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="db7c1a83-b20a-fc86-9dbe-8f20f307b180.htm" target="">getSubMatrixAt(Int32, Int32, Int32, Int32)</a></td><td><div class="summary">
            Overloaded. Gets the binded submatrix for the current matrix.
            Changes to the submatrix WILL affect the current.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="9c0b3638-4ff2-2191-4c76-c91a1d30f9a9.htm" target="">getSubMatrixCopyAt(Int32, Int32)</a></td><td><div class="summary">
            Overloaded. Gets the stand-alone submatrix copy at the specified point.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="efb98dd9-0106-5145-5407-248807914253.htm" target="">getSubMatrixCopyAt(Int32, Int32, Int32, Int32)</a></td><td><div class="summary">
            Overloaded. Gets the stand-alone submatrix copy at the specified point and with specified size.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/dfwy45w9" target="_blank">GetType</a></td><td><div class="summary">Gets the <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/42892f65" target="_blank">Type</a> of the current instance.</div> (Inherited from <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="b3265477-85db-e2f1-2d8e-2c770cce4c91.htm" target="">inverseMatrix_LUP_Factorization</a></td><td><div class="summary">
            Calculates the inverse matrix using the LUP-factorization for calculating matrix determinants 
            and algebraic supplements of its elements.
            It takes O(n^5) operations to run.
            
            Works only for square, non-singular matrices.
            If these requirements are not met, either a MatrixSizeException 
            or a MatrixSingularityException shall be thrown.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="af71926d-14b1-f825-4660-c60350cf52cc.htm" target="">layMatrixAt</a></td><td><div class="summary">
            Inserts the submatrix at the specified point. The current matrix WILL NOT BE STRETCHED
            if the submatrix is too large. In this case, exception will be thrown.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="e06906f2-718a-ae45-55a1-4b1c5d0665f7.htm" target="">LUP_Factorization(<span id="ID0EJABQBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EJABQBEAAAAA?vb=|cpp=array&lt;|cs=|fs=|nu=");
				</script>Int32<span id="ID0EHABQBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EHABQBEAAAAA?vb=()|cpp=&gt;|cs=[]|fs=[]|nu=[]");
				</script><span id="ID0EGABQBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EGABQBEAAAAA?vb=|cpp=%|cs=|fs=|nu=");
				</script>, Matrix_SDA<span id="ID0EEABQBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEABQBEAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T, C<span id="ID0ECABQBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECABQBEAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><span id="ID0EBABQBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABQBEAAAAA?vb=|cpp=%|cs=|fs=|nu=");
				</script>)</a></td><td><div class="summary">
            Preforms the LUP-factorization of a matrix (let it be A)
            in the form of:
            
            P*A = L*U.
            
            The P is an identity matrix with a plenty of row inversions.
            For the economy of space it is provided as a single-dimensional array of integers:
            
            (0, 1, 2, 3, ..., n).
            
            Element indices of this array stand for matrix rows, and elements value
            mean the position of '1' in a row.
            
            Requirements: works for any square and nonsingular matrix (having a non-zero determinant).
            If these requirements aren't met, either a MatrixSingularException or a MatrixSizeException
            would be thrown.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="48d7efbd-4c94-25c6-a240-d87ee4633e7b.htm" target="">LUP_Factorization(<span id="ID0EOABPBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EOABPBEAAAAA?vb=|cpp=array&lt;|cs=|fs=|nu=");
				</script>Int32<span id="ID0EMABPBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EMABPBEAAAAA?vb=()|cpp=&gt;|cs=[]|fs=[]|nu=[]");
				</script><span id="ID0ELABPBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ELABPBEAAAAA?vb=|cpp=%|cs=|fs=|nu=");
				</script>, Matrix_SDA<span id="ID0EJABPBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EJABPBEAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T, C<span id="ID0EHABPBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EHABPBEAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><span id="ID0EGABPBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EGABPBEAAAAA?vb=|cpp=%|cs=|fs=|nu=");
				</script>, Matrix_SDA<span id="ID0EEABPBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEABPBEAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T, C<span id="ID0ECABPBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECABPBEAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><span id="ID0EBABPBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABPBEAAAAA?vb=|cpp=%|cs=|fs=|nu=");
				</script>)</a></td><td><div class="summary">
            Preforms the LUP-factorization of a matrix (let it be A)
            in the form of:
            
            P*A = L*U.
            
            The P is an identity matrix with a plenty of row inversions.
            For the economy of space it is provided as a single-dimensional array of integers:
            
            (0, 1, 2, 3, ..., n).
            
            Element indices of this array stand for matrix rows, and elements value
            mean the position of '1' in a row.
            
            Requirements: works for any square and nonsingular matrix (having a non-zero determinant).
            If these requirements aren't met, either MatrixSingularException of MatrixSizeException
            would be thrown.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="1d59f83d-f657-87dc-100d-e4b934596491.htm" target="">LUP_Factorization(Matrix_SDA<span id="ID0EOABOBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EOABOBEAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T, C<span id="ID0EMABOBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EMABOBEAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><span id="ID0ELABOBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ELABOBEAAAAA?vb=|cpp=%|cs=|fs=|nu=");
				</script>, Matrix_SDA<span id="ID0EJABOBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EJABOBEAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T, C<span id="ID0EHABOBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EHABOBEAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><span id="ID0EGABOBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EGABOBEAAAAA?vb=|cpp=%|cs=|fs=|nu=");
				</script>, Matrix_SDA<span id="ID0EEABOBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEABOBEAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T, C<span id="ID0ECABOBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECABOBEAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><span id="ID0EBABOBEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABOBEAAAAA?vb=|cpp=%|cs=|fs=|nu=");
				</script>)</a></td><td><div class="summary">
            Preforms the LUP-factorization of a matrix (let it be A)
            in the form of:
            
            P*A = L*U.
            
            The P is an identity matrix with a plenty of row inversions.
            
            Requirements: works for any square and nonsingular matrix (having a non-zero determinant).
            If these requirements aren't met, either MatrixSingularException of MatrixSizeException
            would be thrown.
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/57ctke0a" target="_blank">MemberwiseClone</a></td><td><div class="summary">Creates a shallow copy of the current <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="14fc5955-984e-861d-4ed0-59514d132127.htm" target="">multiply</a></td><td></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="df12766e-6b5d-aa05-f3a4-db15ce3dcbab.htm" target="">multiplyByValue</a></td><td><div class="summary">
            Multiplies all of the matrix elements by a double value.
            </div></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="da04784e-8d6a-31f8-a2ff-336516f41351.htm" target="">negate</a></td><td></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="9fb1c2da-d28b-eb35-2fbf-3b06986a5151.htm" target="">setItemAt</a></td><td><div class="summary">
            Sets the value at the specified index pair.
            
            Contract: 
            
            1. should NOT perform any speed-lowering index-bound checking, because all checking has
            been already performed at DoubleMatrix level in this[,] indexer.
            
            2. should NOT perform any element copying for class types.
            </div></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="dc3177f2-b8cc-ff04-8379-bc819987b29a.htm" target="">substract</a></td><td></td></tr><tr data="protected;declared;notNetfw;"><td><img src="./../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="82ba69fb-6fea-1652-76b4-f5309d9a5a9f.htm" target="">sum</a></td><td></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="733dfe6f-a958-5b1a-cdc8-6bbeb58105bd.htm" target="">swapColumns</a></td><td><div class="summary">
            Virtual method. Swaps two columns with specified indices in the matrix.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="bc940f4b-9f83-81ec-1337-f23a22000b5c.htm" target="">swapRows</a></td><td><div class="summary">
            Virtual method. Swaps two rows with specified indices in the matrix.
            The zero-based index of the first row to be swapped with the second.The zero-based index of the second row to be swapped with the first.</div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/7bxwbwt2" target="_blank">ToString</a></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <img src="./../icons/online_icon.gif" class="OH_offlineIcon" alt="Online" title="Online" /><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="0b2d79a0-941a-a237-c69d-a3f9ccbbc3cc.htm" target="">transpose</a></td><td><div class="summary">
            Transposes the current matrix.
            Works only for square matrices, otherwise, a MatrixSizeException will be thrown.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="3928c667-b3f5-ed88-e77f-5c8fda027f96.htm" target="">transposedMatrixCopy</a></td><td><div class="summary">
            Returns the matrix that will be equal to the current matrix after the transposition.
            Performs memory allocation for the new matrix, so any changes made to it will not be reflected on the current matrix.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="aeb0bc13-f0f9-d0ff-72ec-3c8c6b736d82.htm" target="">unwindToArray</a></td><td></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="a73183e9-743e-b648-5535-a9711655bc5f.htm" target="">windFromArray</a></td><td><div class="summary">
            Winds a flat array onto current using the IWinder object.
            The IWinder object is automatically reset before winding.
            IWinder object and current matrix should be have the same dimension (i.e. row count and column count).
            </div></td></tr></table><a href="#mainBody" target="">Back to Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Extension Methods</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="memberList" class="members"><tr><th class="ps_iconColumn">
							 
						</th><th class="ps_nameColumn">Name</th><th class="ps_descriptionColumn">Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="32bd3fa1-e346-5b2b-d18c-45fb0f8c3bd5.htm" target="">Assert_NotNull</a></td><td><div class="summary">
            Performs an assertion that the value passed
            is not null. If it is, throws an ArgumentNullException 
            with the message passed.
            </div> (Defined by <a href="49604598-0ef1-79f2-e016-7e06dbfab94d.htm" target="">Assertions</a>.)</td></tr></table><a href="#mainBody" target="">Back to Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Explicit Interface Implementations</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="memberList" class="members"><tr><th class="ps_iconColumn">
							 
						</th><th class="ps_nameColumn">Name</th><th class="ps_descriptionColumn">Description</th></tr><tr data="explicit;declared;notNetfw;"><td><img src="./../icons/pubinterface.gif" alt="Explicit interface implemetation" title="Explicit interface implemetation" /><img src="./../icons/privmethod.gif" alt="Private method" title="Private method" /></td><td><a href="053f6dcb-80a6-2609-5327-c886092b8227.htm" target="">IMatrix<span id="ID0EBABFBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABFBCAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>GetElementValue</a></td><td></td></tr><tr data="explicit;declared;notNetfw;"><td><img src="./../icons/pubinterface.gif" alt="Explicit interface implemetation" title="Explicit interface implemetation" /><img src="./../icons/privmethod.gif" alt="Private method" title="Private method" /></td><td><a href="a91f26ba-cb68-00e2-96a9-28d9cf063921.htm" target="">IMatrix<span id="ID0EEABEBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEABEBCAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T<span id="ID0ECABEBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECABEBCAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><span id="ID0EBABEBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABEBCAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>GetElementValue(Int32, Int32)</a></td><td></td></tr><tr data="explicit;declared;notNetfw;"><td><img src="./../icons/pubinterface.gif" alt="Explicit interface implemetation" title="Explicit interface implemetation" /><img src="./../icons/privmethod.gif" alt="Private method" title="Private method" /></td><td><a href="2b546d07-6187-5cd8-9309-6aead27010de.htm" target="">IMatrix<span id="ID0EHABDBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EHABDBCAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>Numeric<span id="ID0EFABDBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EFABDBCAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T, C<span id="ID0EDABDBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDABDBCAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><span id="ID0ECABDBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECABDBCAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><span id="ID0EBABDBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABDBCAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>GetElementValue(Int32, Int32)</a></td><td></td></tr><tr data="explicit;declared;notNetfw;"><td><img src="./../icons/pubinterface.gif" alt="Explicit interface implemetation" title="Explicit interface implemetation" /><img src="./../icons/privmethod.gif" alt="Private method" title="Private method" /></td><td><a href="ca037722-30cd-e5cf-fb5a-40564dd75a7d.htm" target="">IMutableMatrix<span id="ID0EBABCBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABCBCAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>SetElementValue</a></td><td></td></tr><tr data="explicit;declared;notNetfw;"><td><img src="./../icons/pubinterface.gif" alt="Explicit interface implemetation" title="Explicit interface implemetation" /><img src="./../icons/privmethod.gif" alt="Private method" title="Private method" /></td><td><a href="3043a14d-b5b2-b189-8551-da2da3a2af56.htm" target="">IMutableMatrix<span id="ID0EEABBBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEABBBCAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T<span id="ID0ECABBBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECABBBCAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><span id="ID0EBABBBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABBBCAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>SetElementValue(Int32, Int32, T)</a></td><td></td></tr><tr data="explicit;declared;notNetfw;"><td><img src="./../icons/pubinterface.gif" alt="Explicit interface implemetation" title="Explicit interface implemetation" /><img src="./../icons/privmethod.gif" alt="Private method" title="Private method" /></td><td><a href="928fd337-5cc0-fb28-e042-69e0fc6b1c16.htm" target="">IMutableMatrix<span id="ID0ELABABCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ELABABCAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>Numeric<span id="ID0EJABABCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EJABABCAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T, C<span id="ID0EHABABCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EHABABCAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><span id="ID0EGABABCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EGABABCAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><span id="ID0EFABABCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EFABABCAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>SetElementValue(Int32, Int32, Numeric<span id="ID0EDABABCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDABABCAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T, C<span id="ID0EBABABCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABABCAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script>)</a></td><td></td></tr></table><a href="#mainBody" target="">Back to Top</a><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="5a023282-18c6-741e-f496-629fca434b01.htm" target="">Matrix<span id="ID0EDABAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDABAAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T, C<span id="ID0EBABAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABAAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script> Class</a></div><div class="seeAlsoStyle"><a href="03dd38ff-a1c8-8718-1ecd-07c3ad2c87d6.htm" target="">whiteMath.Matrices Namespace</a></div></div>
        </div>
      </div>
    </div>
    <div id="OH_footer" class="OH_footer">
      <p />
      <div class="OH_feedbacklink">
        <a href="mailto:?subject=whiteMath+%2b+whiteStructs+-+a+programmer-friendly+mathematical+library+Matrix(T%2c+C)+Methods+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic.</div>
    </div>
  </body>
</html>