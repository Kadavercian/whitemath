<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp">
  <head>
    <link rel="SHORTCUT ICON" href="./../icons/favicon.ico" />
    <style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { backgroundImageName: tabLeftBG.gif; }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { backgroundImageName: tabRightBG.gif; }.OH_footer { backgroundImageName: footer_slice.gif; background-position: top; background-repeat: repeat-x; }</style>
    <link rel="stylesheet" type="text/css" href="./../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" />
    <style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style>
    <script src="./../scripts/branding.js" type="text/javascript">
      <!---->
    </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>WhiteMath(T, C) Members</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="WhiteMath%3CT%2C C%3E class" />
    <meta name="System.Keywords" content="WhiteMath%3CT%2C C%3E class, all members" />
    <meta name="System.Keywords" content="WhiteMath(Of T%2C C) class" />
    <meta name="System.Keywords" content="WhiteMath(Of T%2C C) class, all members" />
    <meta name="System.Keywords" content="whiteMath.WhiteMath%3CT%2C C%3E class" />
    <meta name="System.Keywords" content="whiteMath.WhiteMath(Of T%2C C) class" />
    <meta name="Microsoft.Help.Id" content="AllMembers.T:whiteMath.WhiteMath`2" />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="'true'" />
    <meta name="container" content="whiteMath" />
    <meta name="file" content="5f9d4d1a-e537-daeb-6cdc-c81386fa48a8" />
    <meta name="guid" content="5f9d4d1a-e537-daeb-6cdc-c81386fa48a8" />
    
    <link type="text/css" rel="stylesheet" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <meta name="SelfBranded" content="true" />
  </head>
  <body onload="onLoad()" class="primary-mtps-offline-document">
    <div class="OH_outerDiv">
      <div class="OH_outerContent">
        <table class="TitleTable">
          <tr>
            <td class="OH_tdTitleColumn">WhiteMath<span id="ID0EFBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EFBABAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="typeparameter">T</span>, <span class="typeparameter">C</span><span id="ID0EBBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBABAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script> Members</td>
            <td class="OH_tdRunningTitleColumn">whiteMath + whiteStructs - a programmer-friendly mathematical library</td>
          </tr>
        </table>
        <div id="mainSection">
          <div id="mainBody">
            <span class="introStyle"></span>
            <p></p>The <a href="768a6b51-a119-c7aa-f393-c7d034006502.htm" target="">WhiteMath<span id="ID0ECGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECGAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T, C<span id="ID0EAGAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAGAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script></a> type exposes the following members.<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Constructors</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="memberList" class="members"><tr><th class="ps_iconColumn">
							 
						</th><th class="ps_nameColumn">Name</th><th class="ps_descriptionColumn">Description</th></tr><tr data="private;static;declared;notNetfw;"><td><img src="./../icons/privmethod.gif" alt="Private method" title="Private method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="4a0d18cd-e400-4170-fd3a-9b791ed42e21.htm" target="">WhiteMath<span id="ID0ECABABEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECABABEAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T, C<span id="ID0EAABABEAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAABABEAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script></a></td><td></td></tr></table><a href="#mainBody" target="">Back to Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Methods</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="memberList" class="members"><tr><th class="ps_iconColumn">
							 
						</th><th class="ps_nameColumn">Name</th><th class="ps_descriptionColumn">Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="4988e183-c817-0d32-ae62-94d1be0c62f7.htm" target="">Abs</a></td><td><div class="summary">
            Returns the absolute value of a generic number.
            The method calls to the calculator's zero field representing
            a zero value for the number.
            
            If the result of the call to zero() is mor() than the number, 
            it is considered "negative", positive otherwise.
            
            Safe to use with reference-types, changes on the value returned
            won't be reflected on the argument passed.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="4f048f44-10e9-7a0f-5e71-99b74c4cfc0b.htm" target="">Ceiling</a></td><td><div class="summary">
            Returns the nearest bigger integer number.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="0346639f-6344-ce32-794d-a43e6d234147.htm" target="">Combinations</a></td><td></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="f8f2a189-bc84-4fea-3607-323795df857b.htm" target="">CombinationsRepeated</a></td><td></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="795674ef-4a18-d5a3-1a91-068f32aff1d1.htm" target="">cosine</a></td><td><div class="summary">
            Return the cosine of the argument using Taylor series.
            It is strongly recommended that the argument is in range [-pi; pi]
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="d3243881-072b-62c0-42ec-0ba291105e11.htm" target="">cotangent</a></td><td><div class="summary">
            Returns the cotangent of the argument using Taylor series
            using calls to sine and cosine functions.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="bc2d726d-ca26-3192-f3a6-d04cfee3aab0.htm" target="">Exponent</a></td><td><div class="summary">
            Returns the exponent of a real (or complex) number.
            Uses the Taylor series, user can explicitly specify the amount of members used in calculations.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="1d24f6f8-3b49-0be7-0144-1913adedf94f.htm" target="">ExtendedEuclideanAlgorithm</a></td><td><div class="summary">
            Performs an Extended Euclidean algorithms on two positive numbers <span class="code">one, two</span>,
            calculates their GCD and finds such integer <span class="code">x, y</span> which satisfy Bezout's identity <span class="code">one*x + two*y = 1</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="703bb4ac-3665-7523-fc51-07ea8356474c.htm" target="">Factorial</a></td><td><div class="summary">
            Returns the exact factorial of an integer number.
            Uses simple iteration.
            It is recommended that you use long integers (ex. LongInt) to avoid overflow exceptions.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="661ee128-2089-ae46-a248-ebb473f17f44.htm" target="">Floor</a></td><td><div class="summary">
            Returns the nearest lower integer number.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="cadd6654-100f-e62d-dbf1-749a337ba081.htm" target="">GreatestCommonDivisor</a></td><td><div class="summary">
            Finds the greatest common divisor of two integer-like numbers
            using the simple Euclid algorithm.
            
            The calculator for the numbers is recommended to provide reasonable implementation
            of the remainder operation (%) - otherwise, the function
            Modulus from whiteMath class will be used.
            
            Will work with floating-point type numbers only if they are integers;
            In case of division errors the result will be rounded and thus not guaranteed.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="a6707e0e-cc4a-a9bc-1dab-b67bed6877e2.htm" target="">IsNaturalIntegerPowerOf</a></td><td><div class="summary">
            Checks whether the first number is some natural integer power of
            the argument passed. The exact value of the power is either null (if false)
            or int.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="b2058495-e985-0ffb-17d5-697237a8c187.htm" target="">JacobiSymbol</a></td><td><div class="summary">
            Returns the value of the Jacobi symbol for
            the two numbers, that is, the multiplication product
            of Legendre symbols with numerators all equal to the Jacobi symbol's
            numerator and denominators taken from the factorization
            of Jacobi symbol's denominator.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="d912a02e-bbdf-16cd-7ff9-9067f7fd99e9.htm" target="">LogarithmNatural</a></td><td><div class="summary">
            Returns the natural logarithm of a real number.
            Uses the Taylor series, user can explicitly specify the amount of members used in calculations.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="b69d07c9-62ec-5335-bd68-97caa11925d0.htm" target="">LowestCommonMultiple(T, T)</a></td><td><div class="summary">
            Finds the lowest common multiple of two integer-like numbers from the equation:
            A * B = gcd(A,B) * lcm(A,B)
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="f08cffb4-1872-1925-7021-b86547c12093.htm" target="">LowestCommonMultiple(T, T, T)</a></td><td><div class="summary">
            Finds the lowest common multiple of two integer-like numbers from the equation:
            A * B = gcd(A,B) * lcm(A,B)
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="cc62f0cf-532a-87ed-2706-88e2f982026e.htm" target="">Max</a></td><td><div class="summary">
            Finds the maximum of two numbers.
            
            If T is a reference type, please notice that no numbers are created
            during this procedure, consider calling MaxCopy() if necessary.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="d919adcf-5f9a-5561-c82b-cbbfc528b5bf.htm" target="">MaxCopy</a></td><td><div class="summary">
            Finds the maximum of two numbers and returns its copy.
            Safe for use with reference types - no changes made
            to the value returned will be reflected on any of the arguments.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="a7d31eb1-137b-92e4-60d5-aaa7ebff77cb.htm" target="">Min</a></td><td><div class="summary">
            Finds the minimum of two numbers.
            
            If T is a reference type, please notice that no new objects are created
            during this procedure, consider calling MinCopy() if necessary.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="531b3040-0f5d-1240-a08d-85434fd9c6b0.htm" target="">MinCopy</a></td><td><div class="summary">
            Finds the minimum of two numbers and returns its copy.
            Safe for use with reference types - no changes made
            to the value returned will be reflected on any of the arguments.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="4689f348-472c-3963-07fd-02138ec82489.htm" target="">Modulus</a></td><td><div class="summary">
            Returns the first number modulo second.
            Equivalent to the remainder operation; the formula for the modulus is:
            
            MODULUS = sgn(dividend) * (|dividend| - (|divisor| * floor(|dividend| / |divisor|))).
            
            May produce non-integer results for floating point numbers, use 
            Ceiling() / Floor() or Round() if needed!
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="48ed96e1-f685-edf5-73e5-1e6560c0c862.htm" target="">MultiplicativeInverse</a></td><td><div class="summary">
            Using an Extended Euclidean Algorithm, finds a multiplicative
            inverse of a positive number on a coprime module.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="2cfa9c79-72ee-7bf9-7b6c-18d08282a13d.htm" target="">PI_Leibnitz</a></td><td><div class="summary">
            --- For real number types only! ---
            --- Higher precision recommended ---
            
            Returns the rational approximation of transcend PI constant
            using the Leibnitz series. May be inaccurate, non-generic version is recommended if possible.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="21f29c04-7996-5f8a-ef8e-ee6982339118.htm" target="">Power</a></td><td><div class="summary">
            Returns the number raised to the power specified by the user.
            Uses the Taylor series.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="800fb6d8-6874-6e17-c2b2-d35268f078ee.htm" target="">PowerInteger</a></td><td><div class="summary">
            Performs the quick mathematical power operation.
            Works only for integer exponent values.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="fa5945e8-a1de-2de7-2682-c0c80974a908.htm" target="">PowerInteger_Generic</a></td><td><div class="summary">
            Performs the quick mathematical power operation.
            Works only for integer exponent values.
            
            WARNING! The power value here should be an integer number,
            that is, the calculator method 'integerPower(power)' should
            return the same value as power. Otherwise, the result
            would be unpredictable AND INCORRECT.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="aac30546-f034-b000-d863-6404f8f40d38.htm" target="">PowerIntegerModular</a></td><td><div class="summary">
            Performs a fast modular integral modular exponentiation.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="a579ec41-0aec-ac43-84c3-a9d3121f9bcf.htm" target="">RootsOfUnity</a></td><td><div class="summary">
            For residue class rings modulo <span class="code">N</span> where <span class="code">N &gt;= 1</span>,
            this method finds all modular roots of unity in the specified search interval.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="c0780ec0-11c8-a680-0420-f617f7a2dfd5.htm" target="">Round</a></td><td><div class="summary">
            Rounds a number to the nearest integer number.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="ad264b65-7724-c1e4-d9ed-6da54fff12b3.htm" target="">Sign</a></td><td><div class="summary">
             The signum function.
             Let 'zero' be the calculator's zero() method result/
             Signum of the number equals:
             
             a) 1, if (number &gt; zero);
             b) 0, if (number == zero);
             c) -1, if (number &lt; zero);
             </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="5fc4622a-7c47-2977-ab66-eefaa0b025ee.htm" target="">sine</a></td><td><div class="summary">
            Return the sine of the argument using Taylor series.
            
            It is strongly recommended that the argument is in range [-pi; pi],
            precision may be lost otherwise.
            <a href="867c5e80-a6b7-9f16-f888-1089ad56863d.htm" target="">sineCosineDivideNormalize(T, T)</a><a href="97f1cc9b-a018-669b-1af5-e538bbd50af0.htm" target="">sineCosineSubstractNormalize(T, T)</a></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="867c5e80-a6b7-9f16-f888-1089ad56863d.htm" target="">sineCosineDivideNormalize</a></td><td><div class="summary">
            Normalizes the number to the period [-pi; pi] as recommended by sine() and cosine() 
            methods of the class.
            
            Performes dividing the number by 2pi, substracting the integral part, multiplying by 2pi again and
            (possibly) shifting to reach the [-pi; pi] boundaries. May be inaccurate with low-precision types,
            but only way to use when the argument's absolute value is quite large.
            
            <a href="97f1cc9b-a018-669b-1af5-e538bbd50af0.htm" target="">sineCosineSubstractNormalize(T, T)</a></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="97f1cc9b-a018-669b-1af5-e538bbd50af0.htm" target="">sineCosineSubstractNormalize</a></td><td><div class="summary">
            Normalizes the number to the period [-pi; pi] as recommended by sine() and cosine() 
            methods of the class.
            
            Performed by iterative substraction/addition of the 2pi period from the numbers.
            Shows VERY poor performance when the argument's absolute value is large, but
            may be more precisive at "near-boundaries" ranges, depending on the type.
            
            <a href="867c5e80-a6b7-9f16-f888-1089ad56863d.htm" target="">sineCosineDivideNormalize(T, T)</a></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="9f93d231-12bb-9663-e1f3-142a22d4f38c.htm" target="">SquareRootHeron</a></td><td><div class="summary">
            Performs a square root calculation using simple Heron algorithm.
            Works only for "positive" (number &gt;= calculator.zero()) numbers.
            Calculator should have reasonable fromInt() method implemented, because of the formula:
            
            x_{n+1} = 1/2 * (x_{n} + a/x_{n})
            
            Iteration would stop when the absolute difference between the numbers
            is less than epsilon parameter or when the iteration step results in no change.
            
            Restrictions:
            
            1. The calculator should have reasonable fromInt() method implemented and return a correct
            equivalent for "2".
            2. Suitable for floating-point numbers.
            
            Speed:
            
            Due to genericity, the x_{0} is evaluated equal to the passed number.
            About log(N) iterations is needed.
            
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="9f4e3816-4026-f4a3-4d3d-74b16cf1b633.htm" target="">SquareRootInteger</a></td><td><div class="summary">
            Returns the integer part of the square root
            of the number.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="b4afa753-aec4-5684-bd3d-e4ac52e6163e.htm" target="">SquareRootIntegerSimple</a></td><td><font color="red"><b>Obsolete. </b></font><div class="summary">
            Returns the integer part of the square root
            of the number.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="db5b6173-3617-97c2-927d-2b2c93f0f501.htm" target="">Tangent</a></td><td><div class="summary">
            Returns the tangent of the argument using Taylor series.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="4062fcaa-15af-ef72-24b2-5e869147ebaa.htm" target="">tangentCotangentDivideNormalize</a></td><td><div class="summary">
            Normalizes the number to the period [0; pi] as recommended by the tangent() and cotangent()
            method of the class.
            
            Performes dividing the number by pi, substracting the integral part, multiplying by 2pi again and
            (possibly) shifting to reach the [0; pi] boundaries. May be inaccurate with low-precision types,
            but only way to use when the argument's absolute value is quite large.
            <a href="daf890b0-8775-a44c-91f3-7f18f3c06d49.htm" target="">tangentCotangentSubstractNormalize(T, T)</a></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="./../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="daf890b0-8775-a44c-91f3-7f18f3c06d49.htm" target="">tangentCotangentSubstractNormalize</a></td><td><div class="summary">
            Normalizes the number to the period [-pi; pi] as recommended by tangent() and cotangent() 
            methods of the class.
            
            Performed by iterative substraction/addition of the pi period from the numbers.
            Shows VERY poor performance when the argument's absolute value is large, but
            may be more precisive at "near-boundaries" ranges, depending on the type.
            
            <a href="867c5e80-a6b7-9f16-f888-1089ad56863d.htm" target="">sineCosineDivideNormalize(T, T)</a></div></td></tr></table><a href="#mainBody" target="">Back to Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Fields</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="memberList" class="members"><tr><th class="ps_iconColumn">
							 
						</th><th class="ps_nameColumn">Name</th><th class="ps_descriptionColumn">Description</th></tr><tr data="private;static;declared;notNetfw;"><td><img src="./../icons/privfield.gif" alt="Private field" title="Private field" /><img src="./../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="6c61a9ad-9eeb-c3e8-b74a-c4d47c22da6c.htm" target="">calc</a></td><td></td></tr></table><a href="#mainBody" target="">Back to Top</a><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="768a6b51-a119-c7aa-f393-c7d034006502.htm" target="">WhiteMath<span id="ID0EDABAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDABAAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T, C<span id="ID0EBABAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABAAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script> Class</a></div><div class="seeAlsoStyle"><a href="333546dc-2611-29c0-8d5c-67a343753ef0.htm" target="">whiteMath Namespace</a></div></div>
        </div>
      </div>
    </div>
    <div id="OH_footer" class="OH_footer">
      <p />
      <div class="OH_feedbacklink">
        <a href="mailto:?subject=whiteMath+%2b+whiteStructs+-+a+programmer-friendly+mathematical+library+WhiteMath(T%2c+C)+Members+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic.</div>
    </div>
  </body>
</html>