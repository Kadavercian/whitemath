Документирования библиотеки

20 июля 2009

- Изменен класс grapherArgs, туда перенесено булево свойство drawNumbers и добавлено свойство drawGrid.
- в методе Graph изменена структура, вынесено отдельно SetPoints, DrawCoordinates и DrawCoordNumbers, выполняемых
последовательно.
- Добавлена возможность рисования сетки + соответственно coordPen в graphingArgs

запланировано

- возможность рисовать графики мат. функций (сделать производный класс и переамбалить там метод Graph)
- возможность рисовать графики прерывающихся функций
- чтобы по оси Y числа заканчивались у самой оси, а не налезали на нее.

это была версия 1.1.0

21 июля 2009

- изменен порядок рисования графиков - сначала рисуется график функции, а потом наносятся надписи на кривую

25 июля 2009

- Построен класс Function, представляющий собой описание математической функции и предоставляющий широкие возможности для вычисления различных выражений, в т.ч. композицию нескольких функций в рамках данной.
- Закончено написание алгоритма анализа текстового представления функции на основе класса Function. Ведется отладка.

это была версия 1.2.0

29 июля 2009

- Function: реализован новый условный оператор действия: на основе результата предыдущего действия вычисляется значение первого либо второго операнда.

09 августа 2009

- Function: скорректирован синтаксис действий: теперь после управляющего символа-оператора ставится двоеточие и позволительно ставить перед любым операндом знак "минус".

10 августа 2009

- В список операторов добавлена функция sgn(x) и [x].
- в синтаксис действия добавлена возможность пользовательского вызова ошибок (напр., при реализации факториала - при попытке передать нецелое число можно будет сгенерировать ошибку)
. Ошибка синтаксически располагается на месте операнда и записывается через диез: #сообщение об ошибке#

- список вложенных функций теперь необязательно должен содержать лишь объекты класса Function: возможно применение любой мат.функции, реализующ
ей интерфейс IFunction.

13 августа 2009

- найден и исправлен следующий баг: ExcelGrapher не закрывает работающее в фоновом режиме приложение Microsoft Excel после того, как закончено считывание точек.

14 августа 2009

- ПРОГРАММА: добавлена возможность "перетаскивания" картинки в случае, когда ее разрешение больше разрешения окна отображения в форме GraphicDrawer.

16-17 августа 2009

- Оптимизирован алгоритм построения графиков. Удаление излишней громоздкости.
- ### Добавлена возможность рисования графиков прерывающихся функций.###
- Запланирована реализация интерфейса IFunction - параметрически заданной функции, выдающей значение типа "точка" (x, y).

Это уже Версия 1.3

21 августа 2009

- Обновлен алгоритм построения прерывающихся функций; вблизи границ области определения функции точность возрастает в 100 раз для того, чтобы избежать обрыва графика на участках вертикального ухода или ухода в бесконечность. Чтобы решить вышеуказанную проблему, ранее приходилось задавать точность в несколько десятков тысяч точек на диапазон построение - но такая точность на относительно "пологих" участках является неоправданной. Теперь можно задавать точность в несколько тысяч знаков и в большинстве случаев этого будет достаточно - вблизи границ области определения все будет строиться, никаких "недостроев".
- Запланирована реализация класса Function на основе ОБЩИХ типов (а не только double)
- Запланировано написание класса чисел в экспоненциальном представлении с многократной точностью.

23 сентября 2009

- вспомнил про свою работу. Вздохнул.

20 января 2010

- Реорганизовал иерархию всех граферов.
- Из метода Graph класса StandardGrapher (бывший Grapher) убрал "подготовку" картинки (заливание белым цветом). Скоро будет способ нарисовать несколько графиков на одной картинке.

22 марта 2010

Множество изменений, которые забыл документировать вовремя.

- Реализован класс MultiGrapher. Несколько графиков на одной картинке - теперь это реальность.
- Добавлена библиотека работы с матрицами whiteMath.Matrices с богатым инструментарием построения одномерных матричных разверток.
- Начата поддержка "обратной связи" с граферами - преобразование пиксельных координат графика в численное значение аргумента/функции и наоборот. Для этого был добавлен класс CoordinateTransformer.
- Изменен способ рисования графиков. Теперь график окантовывается черной рамкой, а цифры на насечках рисуются с внешней стороны (не на осях)
- Изменения в производительности. Все быстрее и лучше.

27 марта 2010

- Начата поддержка численных обобщенных типов - Numeric<T,C>.
- Переписана библиотека матриц - вместо DoubleMatrix теперь осуществляется поддержка обобщенного типа MatrixNumeric<T,C>.
- Написан обобщенный класс комплексных чисел.
- КУЧА БАРАХЛА, КОТОРОЕ НАДО РАЗГРЕБАТЬ!!!

21 сентября 2010

- Я уже не помню, кто я такой.

10 января 2011

- На текущий момент реализована куча различных математических алгоритмов для обобщенного типа Numeric<T,C>. Пользователю 
только необходимо предоставить рабочий калькулятор для своего собственного типа, обеспечивающий + - * / и прочие простые операции;
остальное (вычисление логарифмов, корней, синусов, косинусов и прочего) сделает библиотека.
- Ничего не документировал уже тысячу лет. Лень описывать.
- Добавлен класс DoubleInfoExtraction, честно украденный из интернета. Позволяет узнать мантиссу и двоичную экспоненту числа.
